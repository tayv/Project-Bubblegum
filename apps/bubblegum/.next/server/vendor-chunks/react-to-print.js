/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-to-print";
exports.ids = ["vendor-chunks/react-to-print"];
exports.modules = {

/***/ "(ssr)/../../node_modules/react-to-print/lib/index.js":
/*!******************************************************!*\
  !*** ../../node_modules/react-to-print/lib/index.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("!function(e,t){ true?module.exports=t(__webpack_require__(/*! react */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"),__webpack_require__(/*! react-dom */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\")):0}(\"undefined\"!=typeof self?self:this,(function(e,t){return function(){\"use strict\";var n={156:function(t){t.exports=e},111:function(e){e.exports=t},582:function(e,t,n){n.r(t),n.d(t,{__assign:function(){return i},__asyncDelegator:function(){return S},__asyncGenerator:function(){return x},__asyncValues:function(){return E},__await:function(){return O},__awaiter:function(){return h},__classPrivateFieldGet:function(){return k},__classPrivateFieldIn:function(){return R},__classPrivateFieldSet:function(){return M},__createBinding:function(){return g},__decorate:function(){return c},__esDecorate:function(){return u},__exportStar:function(){return v},__extends:function(){return o},__generator:function(){return y},__importDefault:function(){return C},__importStar:function(){return A},__makeTemplateObject:function(){return j},__metadata:function(){return p},__param:function(){return l},__propKey:function(){return f},__read:function(){return m},__rest:function(){return a},__runInitializers:function(){return s},__setFunctionName:function(){return d},__spread:function(){return _},__spreadArray:function(){return P},__spreadArrays:function(){return w},__values:function(){return b}});var r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)};function o(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Class extends value \"+String(t)+\" is not a constructor or null\");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var i=function(){return i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},i.apply(this,arguments)};function a(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n}function c(e,t,n,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var c=e.length-1;c>=0;c--)(o=e[c])&&(a=(i<3?o(a):i>3?o(t,n,a):o(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a}function l(e,t){return function(n,r){t(n,r,e)}}function u(e,t,n,r,o,i){function a(e){if(void 0!==e&&\"function\"!=typeof e)throw new TypeError(\"Function expected\");return e}for(var c,l=r.kind,u=\"getter\"===l?\"get\":\"setter\"===l?\"set\":\"value\",s=!t&&e?r.static?e:e.prototype:null,f=t||(s?Object.getOwnPropertyDescriptor(s,r.name):{}),d=!1,p=n.length-1;p>=0;p--){var h={};for(var y in r)h[y]=\"access\"===y?{}:r[y];for(var y in r.access)h.access[y]=r.access[y];h.addInitializer=function(e){if(d)throw new TypeError(\"Cannot add initializers after decoration has completed\");i.push(a(e||null))};var g=(0,n[p])(\"accessor\"===l?{get:f.get,set:f.set}:f[u],h);if(\"accessor\"===l){if(void 0===g)continue;if(null===g||\"object\"!=typeof g)throw new TypeError(\"Object expected\");(c=a(g.get))&&(f.get=c),(c=a(g.set))&&(f.set=c),(c=a(g.init))&&o.unshift(c)}else(c=a(g))&&(\"field\"===l?o.unshift(c):f[u]=c)}s&&Object.defineProperty(s,r.name,f),d=!0}function s(e,t,n){for(var r=arguments.length>2,o=0;o<t.length;o++)n=r?t[o].call(e,n):t[o].call(e);return r?n:void 0}function f(e){return\"symbol\"==typeof e?e:\"\".concat(e)}function d(e,t,n){return\"symbol\"==typeof t&&(t=t.description?\"[\".concat(t.description,\"]\"):\"\"),Object.defineProperty(e,\"name\",{configurable:!0,value:n?\"\".concat(n,\" \",t):t})}function p(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function h(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function c(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,c)}l((r=r.apply(e,t||[])).next())}))}function y(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(c){return function(l){return function(c){if(n)throw new TypeError(\"Generator is already executing.\");for(;i&&(i=0,c[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&c[0]?r.return:c[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,c[1])).done)return o;switch(r=0,o&&(c=[2&c[0],o.value]),c[0]){case 0:case 1:o=c;break;case 4:return a.label++,{value:c[1],done:!1};case 5:a.label++,r=c[1],c=[0];continue;case 7:c=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==c[0]&&2!==c[0])){a=0;continue}if(3===c[0]&&(!o||c[1]>o[0]&&c[1]<o[3])){a.label=c[1];break}if(6===c[0]&&a.label<o[1]){a.label=o[1],o=c;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(c);break}o[2]&&a.ops.pop(),a.trys.pop();continue}c=t.call(e,a)}catch(e){c=[6,e],r=0}finally{n=o=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,l])}}}var g=Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!(\"get\"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]};function v(e,t){for(var n in e)\"default\"===n||Object.prototype.hasOwnProperty.call(t,n)||g(t,e,n)}function b(e){var t=\"function\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\"number\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function m(e,t){var n=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}function _(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(m(arguments[t]));return e}function w(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,c=i.length;a<c;a++,o++)r[o]=i[a];return r}function P(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))}function O(e){return this instanceof O?(this.v=e,this):new O(e)}function x(e,t,n){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var r,o=n.apply(e,t||[]),i=[];return r={},a(\"next\"),a(\"throw\"),a(\"return\"),r[Symbol.asyncIterator]=function(){return this},r;function a(e){o[e]&&(r[e]=function(t){return new Promise((function(n,r){i.push([e,t,n,r])>1||c(e,t)}))})}function c(e,t){try{(n=o[e](t)).value instanceof O?Promise.resolve(n.value.v).then(l,u):s(i[0][2],n)}catch(e){s(i[0][3],e)}var n}function l(e){c(\"next\",e)}function u(e){c(\"throw\",e)}function s(e,t){e(t),i.shift(),i.length&&c(i[0][0],i[0][1])}}function S(e){var t,n;return t={},r(\"next\"),r(\"throw\",(function(e){throw e})),r(\"return\"),t[Symbol.iterator]=function(){return this},t;function r(r,o){t[r]=e[r]?function(t){return(n=!n)?{value:O(e[r](t)),done:!1}:o?o(t):t}:o}}function E(e){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=b(e),t={},r(\"next\"),r(\"throw\"),r(\"return\"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,o){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,o,(t=e[n](t)).done,t.value)}))}}}function j(e,t){return Object.defineProperty?Object.defineProperty(e,\"raw\",{value:t}):e.raw=t,e}var T=Object.create?function(e,t){Object.defineProperty(e,\"default\",{enumerable:!0,value:t})}:function(e,t){e.default=t};function A(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\"default\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&g(t,e,n);return T(t,e),t}function C(e){return e&&e.__esModule?e:{default:e}}function k(e,t,n,r){if(\"a\"===n&&!r)throw new TypeError(\"Private accessor was defined without a getter\");if(\"function\"==typeof t?e!==t||!r:!t.has(e))throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");return\"m\"===n?r:\"a\"===n?r.call(e):r?r.value:t.get(e)}function M(e,t,n,r,o){if(\"m\"===r)throw new TypeError(\"Private method is not writable\");if(\"a\"===r&&!o)throw new TypeError(\"Private accessor was defined without a setter\");if(\"function\"==typeof t?e!==t||!o:!t.has(e))throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");return\"a\"===r?o.call(e,n):o?o.value=n:t.set(e,n),n}function R(e,t){if(null===t||\"object\"!=typeof t&&\"function\"!=typeof t)throw new TypeError(\"Cannot use 'in' operator on non-object\");return\"function\"==typeof e?t===e:e.has(t)}t.default={__extends:o,__assign:i,__rest:a,__decorate:c,__param:l,__metadata:p,__awaiter:h,__generator:y,__createBinding:g,__exportStar:v,__values:b,__read:m,__spread:_,__spreadArrays:w,__spreadArray:P,__await:O,__asyncGenerator:x,__asyncDelegator:S,__asyncValues:E,__makeTemplateObject:j,__importStar:A,__importDefault:C,__classPrivateFieldGet:k,__classPrivateFieldSet:M,__classPrivateFieldIn:R}}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var i=r[e]={exports:{}};return n[e](i,i.exports,o),i.exports}o.d=function(e,t){for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var i={};return function(){var e=i;Object.defineProperty(e,\"__esModule\",{value:!0}),e.useReactToPrint=e.PrintContextConsumer=void 0;var t=o(582),n=o(156),r=o(111),a=Object.prototype.hasOwnProperty.call(n,\"createContext\"),c=Object.prototype.hasOwnProperty.call(n,\"useMemo\")&&Object.prototype.hasOwnProperty.call(n,\"useCallback\"),l=a?n.createContext({}):null;e.PrintContextConsumer=l?l.Consumer:function(){return null};var u={copyStyles:!0,pageStyle:\"\\n        @page {\\n            /* Remove browser default header (title) and footer (url) */\\n            margin: 0;\\n        }\\n        @media print {\\n            body {\\n                /* Tell browsers to print background colors */\\n                -webkit-print-color-adjust: exact; /* Chrome/Safari/Edge/Opera */\\n                color-adjust: exact; /* Firefox */\\n            }\\n        }\\n    \",removeAfterPrint:!1,suppressErrors:!1},s=function(e){function o(){var n=null!==e&&e.apply(this,arguments)||this;return n.startPrint=function(e){var t=n.props,r=t.onAfterPrint,o=t.onPrintError,i=t.print,a=t.documentTitle;setTimeout((function(){var t,c;if(e.contentWindow)if(e.contentWindow.focus(),i)i(e).then((function(){return null==r?void 0:r()})).then((function(){return n.handleRemoveIframe()})).catch((function(e){o?o(\"print\",e):n.logMessages([\"An error was thrown by the specified `print` function\"])}));else{if(e.contentWindow.print){var l=null!==(c=null===(t=e.contentDocument)||void 0===t?void 0:t.title)&&void 0!==c?c:\"\",u=e.ownerDocument.title;a&&(e.ownerDocument.title=a,e.contentDocument&&(e.contentDocument.title=a)),e.contentWindow.print(),a&&(e.ownerDocument.title=u,e.contentDocument&&(e.contentDocument.title=l))}else n.logMessages([\"Printing for this browser is not currently possible: the browser does not have a `print` method available for iframes.\"]);null==r||r(),n.handleRemoveIframe()}else n.logMessages([\"Printing failed because the `contentWindow` of the print iframe did not load. This is possibly an error with `react-to-print`. Please file an issue: https://github.com/gregnb/react-to-print/issues/\"])}),500)},n.triggerPrint=function(e){var t=n.props,r=t.onBeforePrint,o=t.onPrintError;if(r){var i=r();i&&\"function\"==typeof i.then?i.then((function(){n.startPrint(e)})).catch((function(e){o&&o(\"onBeforePrint\",e)})):n.startPrint(e)}else n.startPrint(e)},n.handleClick=function(){var e=n.props,t=e.onBeforeGetContent,r=e.onPrintError;if(t){var o=t();o&&\"function\"==typeof o.then?o.then(n.handlePrint).catch((function(e){r&&r(\"onBeforeGetContent\",e)})):n.handlePrint()}else n.handlePrint()},n.handlePrint=function(){var e=n.props,o=e.bodyClass,i=e.content,a=e.copyStyles,c=e.fonts,l=e.pageStyle,u=e.nonce,s=i();if(void 0!==s)if(null!==s){var f=document.createElement(\"iframe\");f.width=\"\".concat(document.documentElement.clientWidth,\"px\"),f.height=\"\".concat(document.documentElement.clientHeight,\"px\"),f.style.position=\"absolute\",f.style.top=\"-\".concat(document.documentElement.clientHeight+100,\"px\"),f.style.left=\"-\".concat(document.documentElement.clientWidth+100,\"px\"),f.id=\"printWindow\",f.srcdoc=\"<!DOCTYPE html>\";var d=(0,r.findDOMNode)(s);if(d){var p=d.cloneNode(!0),h=p instanceof Text,y=document.querySelectorAll(\"link[rel='stylesheet']\"),g=h?[]:p.querySelectorAll(\"img\"),v=h?[]:p.querySelectorAll(\"video\"),b=c?c.length:0;n.numResourcesToLoad=y.length+g.length+v.length+b,n.resourcesLoaded=[],n.resourcesErrored=[];var m=function(e,r){n.resourcesLoaded.includes(e)?n.logMessages([\"Tried to mark a resource that has already been handled\",e],\"debug\"):(r?(n.logMessages(t.__spreadArray(['\"react-to-print\" was unable to load a resource but will continue attempting to print the page'],t.__read(r),!1)),n.resourcesErrored.push(e)):n.resourcesLoaded.push(e),n.resourcesLoaded.length+n.resourcesErrored.length===n.numResourcesToLoad&&n.triggerPrint(f))};f.onload=function(){var e,r,i,s;f.onload=null;var y=f.contentDocument||(null===(r=f.contentWindow)||void 0===r?void 0:r.document);if(y){y.body.appendChild(p),c&&((null===(i=f.contentDocument)||void 0===i?void 0:i.fonts)&&(null===(s=f.contentWindow)||void 0===s?void 0:s.FontFace)?c.forEach((function(e){var t=new FontFace(e.family,e.source,{weight:e.weight,style:e.style});f.contentDocument.fonts.add(t),t.loaded.then((function(){m(t)})).catch((function(e){m(t,[\"Failed loading the font:\",t,\"Load error:\",e])}))})):(c.forEach((function(e){return m(e)})),n.logMessages(['\"react-to-print\" is not able to load custom fonts because the browser does not support the FontFace API but will continue attempting to print the page'])));var b=\"function\"==typeof l?l():l;if(\"string\"!=typeof b)n.logMessages(['\"react-to-print\" expected a \"string\" from `pageStyle` but received \"'.concat(typeof b,'\". Styles from `pageStyle` will not be applied.')]);else{var _=y.createElement(\"style\");u&&(_.setAttribute(\"nonce\",u),y.head.setAttribute(\"nonce\",u)),_.appendChild(y.createTextNode(b)),y.head.appendChild(_)}if(o&&(e=y.body.classList).add.apply(e,t.__spreadArray([],t.__read(o.split(\" \")),!1)),!h){for(var w=h?[]:d.querySelectorAll(\"canvas\"),P=y.querySelectorAll(\"canvas\"),O=0;O<w.length;++O){var x=w[O],S=P[O].getContext(\"2d\");S&&S.drawImage(x,0,0)}var E=function(e){var t=g[e],n=t.getAttribute(\"src\");if(n){var r=new Image;r.onload=function(){return m(t)},r.onerror=function(e,n,r,o,i){return m(t,[\"Error loading <img>\",t,\"Error\",i])},r.src=n}else m(t,['Found an <img> tag with an empty \"src\" attribute. This prevents pre-loading it. The <img> is:',t])};for(O=0;O<g.length;O++)E(O);var j=function(e){var t=v[e];t.preload=\"auto\";var n=t.getAttribute(\"poster\");if(n){var r=new Image;r.onload=function(){return m(t)},r.onerror=function(e,r,o,i,a){return m(t,[\"Error loading video poster\",n,\"for video\",t,\"Error:\",a])},r.src=n}else t.readyState>=2?m(t):(t.onloadeddata=function(){return m(t)},t.onerror=function(e,n,r,o,i){return m(t,[\"Error loading video\",t,\"Error\",i])},t.onstalled=function(){return m(t,[\"Loading video stalled, skipping\",t])})};for(O=0;O<v.length;O++)j(O);var T=\"input\",A=d.querySelectorAll(T),C=y.querySelectorAll(T);for(O=0;O<A.length;O++)C[O].value=A[O].value;var k=\"input[type=checkbox],input[type=radio]\",M=d.querySelectorAll(k),R=y.querySelectorAll(k);for(O=0;O<M.length;O++)R[O].checked=M[O].checked;var D=\"select\",I=d.querySelectorAll(D),q=y.querySelectorAll(D);for(O=0;O<I.length;O++)q[O].value=I[O].value}if(a)for(var F=document.querySelectorAll(\"style, link[rel='stylesheet']\"),L=function(e,t){var r=F[e];if(\"style\"===r.tagName.toLowerCase()){var o=y.createElement(r.tagName),i=r.sheet;if(i){var a=\"\";try{for(var c=i.cssRules.length,l=0;l<c;++l)\"string\"==typeof i.cssRules[l].cssText&&(a+=\"\".concat(i.cssRules[l].cssText,\"\\r\\n\"))}catch(e){n.logMessages([\"A stylesheet could not be accessed. This is likely due to the stylesheet having cross-origin imports, and many browsers block script access to cross-origin stylesheets. See https://github.com/gregnb/react-to-print/issues/429 for details. You may be able to load the sheet by both marking the stylesheet with the cross `crossorigin` attribute, and setting the `Access-Control-Allow-Origin` header on the server serving the stylesheet. Alternatively, host the stylesheet on your domain to avoid this issue entirely.\",r],\"warning\")}o.setAttribute(\"id\",\"react-to-print-\".concat(e)),u&&o.setAttribute(\"nonce\",u),o.appendChild(y.createTextNode(a)),y.head.appendChild(o)}}else if(r.getAttribute(\"href\"))if(r.hasAttribute(\"disabled\"))n.logMessages([\"`react-to-print` encountered a <link> tag with a `disabled` attribute and will ignore it. Note that the `disabled` attribute is deprecated, and some browsers ignore it. You should stop using it. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-disabled. The <link> is:\",r],\"warning\"),m(r);else{for(var s=y.createElement(r.tagName),f=(l=0,r.attributes.length);l<f;++l){var d=r.attributes[l];d&&s.setAttribute(d.nodeName,d.nodeValue||\"\")}s.onload=function(){return m(s)},s.onerror=function(e,t,n,r,o){return m(s,[\"Failed to load\",s,\"Error:\",o])},u&&s.setAttribute(\"nonce\",u),y.head.appendChild(s)}else n.logMessages([\"`react-to-print` encountered a <link> tag with an empty `href` attribute. In addition to being invalid HTML, this can cause problems in many browsers, and so the <link> was not loaded. The <link> is:\",r],\"warning\"),m(r)},W=(O=0,F.length);O<W;++O)L(O)}0!==n.numResourcesToLoad&&a||n.triggerPrint(f)},n.handleRemoveIframe(!0),document.body.appendChild(f)}else n.logMessages(['\"react-to-print\" could not locate the DOM node corresponding with the `content` prop'])}else n.logMessages(['There is nothing to print because the \"content\" prop returned \"null\". Please ensure \"content\" is renderable before allowing \"react-to-print\" to be called.']);else n.logMessages([\"To print a functional component ensure it is wrapped with `React.forwardRef`, and ensure the forwarded ref is used. See the README for an example: https://github.com/gregnb/react-to-print#examples\"])},n.handleRemoveIframe=function(e){var t=n.props.removeAfterPrint;if(e||t){var r=document.getElementById(\"printWindow\");r&&document.body.removeChild(r)}},n.logMessages=function(e,t){void 0===t&&(t=\"error\"),n.props.suppressErrors||(\"error\"===t?console.error(e):\"warning\"===t?console.warn(e):\"debug\"===t&&console.debug(e))},n}return t.__extends(o,e),o.prototype.render=function(){var e=this.props,t=e.children,r=e.trigger;if(r)return n.cloneElement(r(),{onClick:this.handleClick});if(!l)return this.logMessages(['\"react-to-print\" requires React ^16.3.0 to be able to use \"PrintContext\"']),null;var o={handlePrint:this.handleClick};return n.createElement(l.Provider,{value:o},t)},o.defaultProps=u,o}(n.Component);e.default=s,e.useReactToPrint=function(e){if(!c)return e.suppressErrors||console.error('\"react-to-print\" requires React ^16.8.0 to be able to use \"useReactToPrint\"'),function(){throw new Error('\"react-to-print\" requires React ^16.8.0 to be able to use \"useReactToPrint\"')};var r=n.useMemo((function(){return new s(t.__assign(t.__assign({},u),e))}),[e]);return n.useCallback((function(){return r.handleClick()}),[r])}}(),i}()}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/react-to-print/lib/index.js\n");

/***/ })

};
;